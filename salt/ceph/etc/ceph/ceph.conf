{% import 'ceph/global_vars.jinja' as conf with context -%}
{% set hosts = [] -%}
{% set IPs = [] -%}
{% for mon in conf.hosts -%}
{% do hosts.append(mon['host']) -%}
{% do IPs.append(mon['ip']) -%}
{% endfor -%}
[global]
    fsid = {{ salt['pillar.get']('ceph:global:fsid') }}
    pid file = /var/run/ceph/$name.pid 
    log file = /var/log/ceph/$name.log
    cephx cluster require signatures = true 
    cephx service require signatures = false 
    public network = {{ salt['pillar.get']('ceph:global:public_network') }}
    cluster network = {{ salt['pillar.get']('ceph:global:cluster_network') }}
    {% if salt['pillar.get']('ceph:global:auth_type') == 'none' -%}
    auth cluster required = none
    auth service required = none
    auth client required = none
    {%- else -%}
    auth cluster required = cephx
    auth service required = cephx
    auth client required = cephx
    {%- endif %}

[mon] 
    mon initial members = {{ hosts| join(", ")  }}
    mon host = {{ IPs|join(",") }}
    filestore xattr use omap = true 
    mon data = /var/lib/ceph/mon/$name 
    mon clock drift allowed = .8 

[osd]
    osd data = /var/lib/ceph/osd/$cluster-$id
    osd journal = /var/lib/ceph/osd/$cluster-$id/journal
    osd journal size = {{ salt['pillar.get']('ceph:osd:journal_size') }}
    osd pool default size = {{ salt['pillar.get']('ceph:osd:pool_default_size') }}
    osd pool default min size = {{ salt['pillar.get']('ceph:osd:pool_default_min_size') }}
    osd pool default pg num = {{ salt['pillar.get']('ceph:osd:pool_default_pg_num') }}
    osd pool default pgp num = {{ salt['pillar.get']('ceph:osd:pool_default_pgp_num') }}
    osd crush chooseleaf type = {{ salt['pillar.get']('ceph:osd:crush_chooseleaf_type') }}
    osd crush update on start = {{ salt['pillar.get']('ceph:osd:crush_update_on_start') }}
    filestore merge threshold = {{ salt['pillar.get']('ceph:osd:filestore_merge_threshold') }}
    filestore split multiple = {{ salt['pillar.get']('ceph:osd:filestore_split_multiple') }}
    osd op threads = {{ salt['pillar.get']('ceph:osd:op_threads') }}

[client]
    rbd cache = {{ salt['pillar.get']('ceph:client:rbd_cache') }}
    rbd cache size = {{ salt['pillar.get']('ceph:client:rbd_cache_size') }}

{% for mon in conf.hosts -%}

[mon.{{ mon['host'] }}]
    host = {{ mon['host'] }}
    mon addr = {{ mon['ip'] }}:6789

{% endfor -%}

{% for device in conf.devices -%}
{% for (key, value) in device['dev']|dictsort -%}

[osd.{{ value.id }}]
    host = {{ device.host }}

{% endfor -%}
{% endfor -%}